"LAMMPS WWW Site"_lws - "LAMMPS Documentation"_ld - "LAMMPS Commands"_lc :c

:link(lws,http://lammps.sandia.gov)
:link(ld,Manual.html)
:link(lc,Section_commands.html#comm)

:line

fix gravity command :h3
fix gravity/cuda command :h3

[Syntax:]

fix ID group gravity style magnitude args :pre

ID, group are documented in "fix"_fix.html command :ulb,l
gravity = style name of this fix command :l
magnitude = size of acceleration (force/mass units) :l
style = {chute} or {spherical} or {gradient} or {vector} :l
  {chute} args = angle
    angle = angle in +x away from -z or -y axis in 3d/2d (in degrees)
  {spherical} args = phi theta
    phi = azimuthal angle from +x axis (in degrees)
    theta = angle from +z or +y axis in 3d/2d (in degrees)
  {gradient} args = phi theta phi_grad theta_grad
    phi = azimuthal angle from +x axis (in degrees)
    theta = angle from +z or +y axis in 3d/2d (in degrees)
    phi_grad = rate of change of angle phi (full rotations per time unit)
    theta_grad = rate of change of angle theta (full rotations per time unit)
  {vector} args = x y z
    x y z = vector direction to apply the acceleration :pre
:ule

[Examples:]

fix 1 all gravity 1.0 chute 24.0
fix 1 all gravity 1.0 spherical 0.0 -180.0
fix 1 all gravity 1.0 gradient 0.0 -180.0 0.0 0.1
fix 1 all gravity 100.0 vector 1 1 0 :pre

[Description:]

Impose an additional acceleration on each particle in the group.  This
fix is typically used with granular systems to include a "gravity"
term acting on the macroscopic particles.  More generally, it can
represent any kind of driving field, e.g. a pressure gradient inducing
a Poiseuille flow in a fluid.  Note that this fix operates differently
than the "fix addforce"_fix_addforce.html command.  The addforce fix
adds the same force to each atom, independent of its mass.  This
command imparts the same acceleration to each atom (force/mass).

The {magnitude} of the acceleration is specified in force/mass units.
For granular systems (LJ units) this is typically 1.0.  See the
"units"_units.html command for details.

Style {chute} is typically used for simulations of chute flow where
the specified angle is the chute angle, with flow occurring in the +x
direction.  For 3d systems, the tilt is away from the z axis; for 2d
systems, the tilt is away from the y axis.

Style {spherical} allows an arbitrary 3d direction to be specified for
the acceleration vector.  Phi and theta are defined in the usual
spherical coordinates.  Thus for acceleration acting in the -z
direction, theta would be 180.0 (or -180.0).  Theta = 90.0 and phi =
-90.0 would mean acceleration acts in the -y direction.  For 2d
systems, {phi} is ignored and {theta} is an angle in the xy plane
where theta = 0.0 is the y-axis.

Style {gradient} is the same as style {spherical} except that the
direction of the acceleration vector is time dependent.  The units of
the gradient arguments are in full rotations per time unit.  E.g. a
timestep of 0.001 and a gradient of 0.1 means the acceleration vector
would rotate thru 360 degrees every 10,000 timesteps.  For the
time-dependent case, the initial direction of the acceleration vector
is set to phi,theta when the fix is specified and evolves thereafter.
For 2d systems, {phi} and {phi_grad} are ignored.

Style {vector} imposes an acceleration in the vector direction given
by (x,y,z).  For 2d systems, the z component is ignored.

:line

Styles with a {cuda} suffix are functionally the same as the
corresponding style without the suffix.  They have been optimized to
run faster, depending on your available hardware, as discussed in
"this section"_Section_accelerate.html of the manual.  The accelerated
styles take the same arguments and should produce the same results,
except for round-off and precision issues.

These accelerated styles are part of the USER-CUDA package.  They are
only enabled if LAMMPS was built with that package.  See the "Making
LAMMPS"_Section_start.html#start_3 section for more info.

You can specify the accelerated styles explicitly in your input script
by including their suffix, or you can use the "-suffix command-line
switch"_Section_start.html#start_6 when you invoke LAMMPS, or you can
use the "suffix"_suffix.html command in your input script.

See "this section"_Section_accelerate.html of the manual for more
instructions on how to use the accelerated styles effectively.

:line

[Restart, fix_modify, output, run start/stop, minimize info:]

No information about this fix is written to "binary restart
files"_restart.html.  

The "fix_modify"_fix_modify.html {energy} option is supported by this
fix to add the gravitational potential energy of the system to the
system's potential energy as part of "thermodynamic
output"_thermo_style.html.

This fix computes a global scalar which can be accessed by various
"output commands"_Section_howto.html#howto_15.  This scalar is the
gravitational potential energy of the particles in the defined field,
namely mass * (g dot x) for each particles, where x and mass are the
particles position and mass, and g is the gravitational field.  The
scalar value calculated by this fix is "extensive".

No parameter of this fix can be used with the {start/stop} keywords of
the "run"_run.html command.  This fix is not invoked during "energy
minimization"_minimize.html.

[Restrictions:] none

[Related commands:]

"atom_style sphere"_atom_style.html, "fix addforce"_fix_addforce.html

[Default:] none
